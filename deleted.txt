------ FETCH HELPERS ------
// export const fetch_createTemplate = async (
//   body: TYPES.type_Create_Template_Body
// ): Promise<Template> => {
//   const data = await fetch(`${API_V1}template`, {
//     method: "POST",
//     body: JSON.stringify(body),
//     headers: { "Content-Type": "application/json" },
//   });

//   return data.json();
// };

// export const fetch_getAllUserTemplates = async (
//   user_id: TYPES.type_user_id
// ): Promise<Template[]> => {
//   if (user_id && typeof user_id === "string") {
//     const data = await fetch(
//       `${API_V1}allTemplates?template_user_id=${user_id}`
//     );

//     return data.json();
//   }
// };

// export const fetch_addHabitToTemplate = async ({
//   habit_description,
//   template_id,
// }: TYPES.type_Template_Query): Promise<Template> => {
//   const data = await fetch(
//     `${API_V1}template?habit_description=${habit_description}&template_id=${template_id}`,
//     {
//       method: "PUT",
//       headers: { "Content-Type": "application/json" },
//     }
//   );

//   return data.json();
// };

// export const fetch_createManyHabit = async ({
//   template_id,
//   routine_id,
//   user_id,
// }: {
//   user_id: TYPES.type_user_id;
//   routine_id: TYPES.type_routine_id;
//   template_id: TYPES.type_template_id;
// }): Promise<Prisma.BatchPayload> => {
//   const data = await fetch(`${API_V1}habit`, {
//     method: "POST",
//     body: JSON.stringify({
//       template_id,
//       routine_id,
//       user_id,
//       task: "createMany",
//     }),

//     headers: { "Content-Type": "application/json" },
//   });

//   return data.json();
// };

------ PRISMA HELPERS ------
// export const prisma_createRetDailyRoutine = async (
//   user_id: TYPES.type_user_id,
//   today: TYPES.type_routine_title
// ): Promise<TYPES.type_Routine_and_Habits> => {
//   if (user_id.toString() !== "undefined") {
//     const page = await prisma.routine.upsert({
//       where: {
//         user_routine_title_unique: {
//           routine_title: today,
//           routine_user_id: user_id,
//         },
//       },
//       create: {
//         routine_title: today,
//         Routine_User: {
//           connect: {
//             user_id,
//           },
//         },
//       },
//       update: {},
//       include: {
//         Routine_Habits: {
//           select: TYPES.Useful_Habit_Include_Object,
//           orderBy: [{ habit_done: "asc" }, { habit_datecreated: "desc" }],
//         },
//       },
//     });

//     return page;
//   }
// };

// export const prisma_getRoutineByRoutineid = async (
//   routine_id: TYPES.type_routine_id
// ): Promise<Routine> => {
//   const routine: Routine = await prisma.routine.findUnique({
//     where: {
//       routine_id,
//     },
//   });

//   return routine;
// };

// export const prisma_deleteRoutineByRoutineid = async (
//   routine_id: TYPES.type_routine_id
// ): Promise<Routine> => {
//   const deletedRoutine: Routine = await prisma.routine.delete({
//     where: {
//       routine_id,
//     },
//   });

//   return deletedRoutine;
// };

// export const prisma_getRoutineByRoutineTitle = async (
//   routine_title: TYPES.type_routine_title,
//   user_id: TYPES.type_user_id
// ): Promise<Routine> => {
//   const routine: Routine = await prisma.routine.findUnique({
//     where: {
//       user_routine_title_unique: {
//         routine_title,
//         routine_user_id: user_id,
//       },
//     },
//   });

//   return routine;
// };

// export const prisma_createRoutine = async ({
//   routine_title,
//   user_id,
// }: TYPES.type_Routine_Body): Promise<Routine> => {
//   const createdRoutine: Routine = await prisma.routine.create({
//     data: {
//       routine_title,
//       Routine_User: {
//         connect: {
//           user_id,
//         },
//       },
//     },
//   });

//   return createdRoutine;
// };

// export const prisma_getHabitbyHabitid = async (
//   habit_id: TYPES.type_habit_id
// ): Promise<TYPES.type_Useful_Habit> => {
//   const habit: Habit = await prisma.habit.findUnique({
//     where: {
//       habit_id,
//     },
//   });

//   return habit;
// };

// export const prisma_toggleHabitDone = async ({
//   habit_id,
//   habit_done,
// }: TYPES.Habit_Body): Promise<TYPES.type_Useful_Habit> => {
//   const habit: TYPES.type_Useful_Habit = await prisma.habit.update({
//     where: {
//       habit_id,
//     },
//     data: {
//       habit_done,
//     },
//   });

//   return habit;
// };

// export const prisma_createHabit = async ({
//   habit_description,
//   routine_id,
//   user_id,
// }: TYPES.Habit_Body): Promise<TYPES.type_Useful_Habit> => {
//   const todo: TYPES.type_Useful_Habit = await prisma.habit.create({
//     data: {
//       habit_description,
//       Habit_User: {
//         connect: {
//           user_id,
//         },
//       },
//       Habit_Routine: {
//         connect: {
//           routine_id,
//         },
//       },
//     },
//   });

//   return todo;
// };

// export const prisma_deleteHabit = async (
//   habit_id: TYPES.type_habit_id
// ): Promise<TYPES.type_Useful_Habit> => {
//   const deletedHabit: TYPES.type_Useful_Habit = await prisma.habit.delete({
//     where: {
//       habit_id,
//     },
//   });

//   return deletedHabit;
// };

// export const prisma_createManyHabit = async ({
//   habits,
//   routine_id,
//   user_id
// }: TYPES.Habit_Body): Promise<Prisma.BatchPayload> => {
//   const dataArr = habits.map((i) => {
//     return {
//       habit_description: i,
//       habit_routine_id: routine_id,
//       habit_user_id: user_id
//     };
//   });

//   const count: Prisma.BatchPayload = await prisma.habit.createMany({
//     data: dataArr
//   });

//   // await prisma.routine.update({
//   //   where: {
//   //     routine_id
//   //   },
//   //   data: {
//   //     Routine_Habits: {
//   //       createMany: {
//   //         data: habits,
//   //         skipDuplicates: true
//   //       }
//   //     }
//   //   }
//   // });

//   return count;
// };
// export const prisma_createManyHabit = async ({
//   template_id,
//   routine_id,
//   user_id,
// }: TYPES.Habit_Body): Promise<Prisma.BatchPayload> => {
//   const template = await prisma.template.findUnique({
//     where: {
//       template_id,
//     },
//   });

//   const habits = template.template_habits;

//   const dataArr = habits.map((i) => {
//     return {
//       habit_description: i,
//       habit_routine_id: routine_id,
//       habit_user_id: user_id,
//     };
//   });

//   const count: Prisma.BatchPayload = await prisma.habit.createMany({
//     data: dataArr,
//   });

//   return count;
// };

// export const prisma_createTemplate = async ({
//   template_habits,

//   template_title,
//   user_id,
// }: TYPES.type_Create_Template_Body): Promise<Template> => {
//   const template: Template = await prisma.template.create({
//     data: {
//       template_title,
//       template_habits,
//       Template_User: {
//         connect: {
//           user_id,
//         },
//       },
//     },
//   });

//   return template;
// };

// export const prisma_getAllUserTemplates = async (
//   user_id: TYPES.type_user_id
// ): Promise<Template[]> => {
//   const templates: Template[] = await prisma.template.findMany({
//     where: {
//       Template_User: {
//         user_id,
//       },
//     },
//   });

//   return templates;
// };

// export const prisma_addHabitToTemplate = async ({
//   habit_description,
//   template_id,
// }: {
//   template_id: TYPES.type_template_id;
//   habit_description: TYPES.type_habit_description;
// }): Promise<Template> => {
//   const template: Template = await prisma.template.update({
//     where: {
//       template_id,
//     },
//     data: {
//       template_habits: {
//         push: habit_description,
//       },
//     },
//   });

//   return template;
// };

------ SERVER HELPERS ------
// export const server_createRetDailyRoutine = async (
//   user_id: TYPES.type_user_id,
//   today: TYPES.type_page_title
// ): Promise<TYPES.type_Routine_and_Habits> => {
//   if (
//     user_id &&
//     typeof user_id === "string" &&
//     today &&
//     typeof today === "string"
//   ) {
//     const data = await fetch(
//       `${API_V1}routine?routine_user_id=${user_id}&today=${today}`
//     );

//     return data.json();
//   }
// };

// export const server_createHabit = async (
//   body: TYPES.Habit_Body
// ): Promise<TYPES.type_Useful_Habit> => {
//   if (body) {
//     const data = await fetch(`${API_V1}habit`, {
//       method: "POST",
//       body: JSON.stringify(body),
//       headers: { "Content-Type": "application/json" },
//     });

//     return data.json();
//   }
// };

// export const server_toggleHabitDone = async ({
//   habit_id,
//   habit_done,
// }: {
//   habit_id: TYPES.type_habit_id;
//   habit_done: TYPES.type_habit_done;
// }): Promise<type_Useful_Habit> => {
//   const data = await fetch(`${API_V1}habit`, {
//     method: "POST",
//     body: JSON.stringify({
//       task: "toggleState",
//       habit_id,
//       habit_done: !habit_done,
//     }),
//     headers: { "Content-Type": "application/json" },
//   });

//   return data.json();
// };

// export const server_createTemplate = async (
//   body: TYPES.type_Create_Template_Body
// ): Promise<Template> => {
//   const data = await fetch(`${API_V1}template`, {
//     method: "POST",
//     body: JSON.stringify(body),
//     headers: { "Content-Type": "application/json" },
//   });

//   return data.json();
// };

// export const server_getAllUserTemplates = async (
//   user_id: TYPES.type_user_id
// ): Promise<Template[]> => {
//   if (user_id && typeof user_id === "string") {
//     const data = await fetch(
//       `${API_V1}allTemplates?template_user_id=${user_id}`
//     );

//     return data.json();
//   }
// };

// export const server_addHabitToTemplate = async ({
//   habit_description,
//   template_id,
// }: TYPES.type_Template_Query): Promise<Template> => {
//   const data = await fetch(
//     `${API_V1}template?habit_description=${habit_description}&template_id=${template_id}`,
//     {
//       method: "PUT",
//       headers: { "Content-Type": "application/json" },
//     }
//   );

//   return data.json();
// };

// export const server_createManyHabit = async ({
//   template_id,
//   routine_id,
//   user_id,
// }: {
//   user_id: TYPES.type_user_id;
//   routine_id: TYPES.type_routine_id;
//   template_id: TYPES.type_template_id;
// }): Promise<Prisma.BatchPayload> => {
//   const data = await fetch(`${API_V1}habit`, {
//     method: "POST",
//     body: JSON.stringify({
//       template_id,
//       routine_id,
//       user_id,
//       task: "createMany",
//     }),

//     headers: { "Content-Type": "application/json" },
//   });

//   return data.json();
// };

// export const fetch_createRetDailyRoutine = async (
//   user_id: TYPES.type_user_id,
//   today: TYPES.type_page_title
// ): Promise<TYPES.type_Routine_and_Habits> => {
//   if (
//     user_id &&
//     typeof user_id === "string" &&
//     today &&
//     typeof today === "string"
//   ) {
//     const data = await fetch(
//       `${API_V1}routine?routine_user_id=${user_id}&today=${today}`
//     );

//     return data.json();
//   }
// };

// export const fetch_createHabit = async (
//   body: TYPES.Habit_Body
// ): Promise<TYPES.type_Useful_Habit> => {
//   if (body) {
//     const data = await fetch(`${API_V1}habit`, {
//       method: "POST",
//       body: JSON.stringify(body),
//       headers: { "Content-Type": "application/json" },
//     });

//     return data.json();
//   }
// };

// export const fetch_toggleHabitDone = async ({
//   habit_id,
//   habit_done,
// }: {
//   habit_id: TYPES.type_habit_id;
//   habit_done: TYPES.type_habit_done;
// }): Promise<type_Useful_Habit> => {
//   const data = await fetch(`${API_V1}habit`, {
//     method: "POST",
//     body: JSON.stringify({
//       task: "toggleState",
//       habit_id,
//       habit_done: !habit_done,
//     }),
//     headers: { "Content-Type": "application/json" },
//   });

//   return data.json();
// };
